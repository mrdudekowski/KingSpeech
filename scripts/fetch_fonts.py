import os
import re
import urllib.request
from urllib.parse import urlparse

UA = (
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 "
    "(KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"
)
CSS_URL = (
    "https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;700;800&display=swap"
)
ROOT = os.path.dirname(os.path.dirname(__file__))
FONTS_DIR = os.path.join(ROOT, "fonts", "plus-jakarta-sans")
CSS_OUT = os.path.join(FONTS_DIR, "fonts.css")

os.makedirs(FONTS_DIR, exist_ok=True)

req = urllib.request.Request(CSS_URL, headers={"User-Agent": UA})
with urllib.request.urlopen(req) as resp:
    css = resp.read().decode("utf-8")

# Normalize line breaks
css = css.replace("\r\n", "\n")

# Split into @font-face blocks
blocks = [b + "\n}" for b in css.split("}\n") if "@font-face" in b]

local_css_blocks = []

subset_guess = {
    "cyrillic": re.compile(r"U\+04[0-9A-Fa-f]{2}"),
    "latin": re.compile(r"U\+00[0-9A-Fa-f]{2}"),
}

for block in blocks:
    # weight
    m_w = re.search(r"font-weight:\s*(\d+)", block)
    weight = m_w.group(1) if m_w else "400"
    # unicode-range
    m_u = re.search(r"unicode-range:\s*([^;]+);", block)
    u_range = m_u.group(1).strip() if m_u else "U+000-5FF"
    # src url woff2
    m_url = re.search(r"src:\s*url\(([^)]+\.woff2)\)", block)
    if not m_url:
        continue
    url = m_url.group(1)
    # subset name
    subset = "latin"
    if subset_guess["cyrillic"].search(u_range):
        subset = "cyrillic"
    name = f"PlusJakartaSans-{weight}-{subset}.woff2"
    dest = os.path.join(FONTS_DIR, name)
    # download
    if not os.path.isfile(dest):
        print("Downloading:", name)
        req_f = urllib.request.Request(url, headers={"User-Agent": UA})
        with urllib.request.urlopen(req_f) as r, open(dest, "wb") as f:
            f.write(r.read())
    # local css block
    # Replace src url to local relative
    local_block = re.sub(r"src:\s*url\(([^)]+)\)", f"src: url({name})", block)
    local_css_blocks.append(local_block)

# Write fonts.css
with open(CSS_OUT, "w", encoding="utf-8") as f:
    f.write("/* Auto-generated by scripts/fetch_fonts.py */\n")
    for b in local_css_blocks:
        f.write(b)
        if not b.strip().endswith("}"):
            f.write("}\n")

print("Saved:", CSS_OUT)
